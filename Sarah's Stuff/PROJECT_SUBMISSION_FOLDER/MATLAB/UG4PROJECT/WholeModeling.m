%MATLAB 2013 has issues with BLAS TLS libraries, so need to run 
% ones(10)*ones(10)

ones(10)*ones(10);
% Load in matrices.
% ask what matrix and what class labels (Binary/Multi class

List_files_in_features = dir('features');

List_files_in_Months = dir('Months');

List_files_in_Weeks = dir('Weeks');


%First Run: Do KNN Multi-Class First
%{
for file_index = 3:length(List_files_in_features)
    
    WorkingfileName = List_files_in_features(file_index).name;
    
    % Want to get the name of the features we are working with
    length_of_file_name = length(WorkingfileName);
    length_file_name_without_extention = length_of_file_name - 4;
    ChosenMatrix = WorkingfileName(1:length_file_name_without_extention);
    ChosenFeatures = ChosenMatrix;
    
    toWorkWith = sprintf('features/%s',WorkingfileName);
    
    % load the features to work with
    load(toWorkWith)
    
    % Start by removing outliers
    [InX,InY,NumberRemoved] = RemoveOutliers(InX,InY);
    
    % Normalize columns to have mean 0, std 1
    
    InX = zscore(InX);
    
    [NumberOfInstances,NumberOfFeatures] = size(InX);
    
    %Methods
        % CFS
    % FCBF
    % Fisher

    % Multi-Class
    [CFS_M,cfs_columns,...
    FCBF_M,fcbf_columns,Fisher_M,...
    fisher_columns] = FSMyMatrix(InX,InY);


    InitialFile_FileName = sprintf('%s_MultiClass_Initial',ChosenMatrix);
    Write_Multi_Initial = fopen(InitialFile_FileName,'w');
 
    fprintf(Write_Multi_Initial, 'Original Number of features: %d \n',NumberOfFeatures);
    fprintf(Write_Multi_Initial, 'Number of outliers removed: %d \n',NumberRemoved);
    fprintf(Write_Multi_Initial,'%d Features Chosen by CFS: \n',length(cfs_columns)); 
    fprintf(Write_Multi_Initial,' %d ',cfs_columns);
    fprintf(Write_Multi_Initial,'\n');

    fprintf(Write_Multi_Initial,'%d Features Chosen by FCBF: \n',length(fcbf_columns)); 
    fprintf(Write_Multi_Initial,' %d ',fcbf_columns);
    fprintf(Write_Multi_Initial,'\n');


    fprintf(Write_Multi_Initial,'%d Features Chosen by Fisher: \n',length(fisher_columns)); 
    fprintf(Write_Multi_Initial,' %d ',fisher_columns);
    fprintf(Write_Multi_Initial,'\n');

    fclose('all');
 

    
    %Model
% K-NN
% Run cross-fold K-NN on each of the N+1 matrices
% Return the best K, evaluation measures for each matrix,
% Best K is a results of the best evaluation measures

% Knn Multi Class
 

%%%%%% Multi Class %%%%%%


%My Original Matrix Multi Class
[Orig_KNN_Precision_micro,...
Orig_KNN_Precision_Macro,...
Orig_KNN_Recall_micro,...
Orig_KNN_Recall_Macro,...
Orig_KNN_Fscore_Macro,...
Orig_KNN_Fscore_micro,...
Orig_KNN_Acc,...
Orig_KNN_NumNeigh,...
Orig_KNN_Confusion]...
= RunMyKnn(InX,InY);


WriteMyKNNFile(ChosenFeatures,...
'Original_Matrix',...
'MultiClass',...
Orig_KNN_Precision_micro,...
Orig_KNN_Precision_Macro,...
Orig_KNN_Recall_micro,...
Orig_KNN_Recall_Macro,...
Orig_KNN_Fscore_Macro,...
Orig_KNN_Fscore_micro,...
Orig_KNN_Acc,...
Orig_KNN_NumNeigh,...
Orig_KNN_Confusion);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%CFS Multi Class
[CFS_KNN_Precision_micro,...
CFS_KNN_Precision_Macro,...
CFS_KNN_Recall_micro,...
CFS_KNN_Recall_Macro,...
CFS_KNN_Fscore_Macro,...
CFS_KNN_Fscore_micro,...
CFS_KNN_Acc,...
CFS_KNN_NumNeigh,...
CFS_KNN_Confusion]...
= RunMyKnn(CFS_M,InY);

WriteMyKNNFile(ChosenFeatures,...
'CFS_Matrix',...
'MultiClass',...
CFS_KNN_Precision_micro,...
CFS_KNN_Precision_Macro,...
CFS_KNN_Recall_micro,...
CFS_KNN_Recall_Macro,...
CFS_KNN_Fscore_Macro,...
CFS_KNN_Fscore_micro,...
CFS_KNN_Acc,...
CFS_KNN_NumNeigh,...
CFS_KNN_Confusion);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FCBF Multi Class
[FCBF_KNN_Precision_micro,...
FCBF_KNN_Precision_Macro,...
FCBF_KNN_Recall_micro,...
FCBF_KNN_Recall_Macro,...
FCBF_KNN_Fscore_Macro,...
FCBF_KNN_Fscore_micro,...
FCBF_KNN_Acc,...
FCBF_KNN_NumNeigh,...
FCBF_KNN_Confusion]...
= RunMyKnn(FCBF_M,InY);

WriteMyKNNFile(ChosenFeatures,...
'FCBF_Matrix',...
'MultiClass',...
FCBF_KNN_Precision_micro,...
FCBF_KNN_Precision_Macro,...
FCBF_KNN_Recall_micro,...
FCBF_KNN_Recall_Macro,...
FCBF_KNN_Fscore_Macro,...
FCBF_KNN_Fscore_micro,...
FCBF_KNN_Acc,...
FCBF_KNN_NumNeigh,...
FCBF_KNN_Confusion);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Fisher Multi Class
[Fisher_KNN_Precision_micro,...
Fisher_KNN_Precision_Macro,...
Fisher_KNN_Recall_micro,...
Fisher_KNN_Recall_Macro,...
Fisher_KNN_Fscore_Macro,...
Fisher_KNN_Fscore_micro,...
Fisher_KNN_Acc,...
Fisher_KNN_NumNeigh,...
Fisher_KNN_Confusion]...
= RunMyKnn(Fisher_M,InY);

WriteMyKNNFile(ChosenFeatures,...
'Fisher_Matrix',...
'MultiClass',...
Fisher_KNN_Precision_micro,...
Fisher_KNN_Precision_Macro,...
Fisher_KNN_Recall_micro,...
Fisher_KNN_Recall_Macro,...
Fisher_KNN_Fscore_Macro,...
Fisher_KNN_Fscore_micro,...
Fisher_KNN_Acc,...
Fisher_KNN_NumNeigh,...
Fisher_KNN_Confusion);
    

end
%}


%Second Run: KNN Binary
%{
for file_index = 3:length(List_files_in_features)
    
    WorkingfileName = List_files_in_features(file_index).name;
    
    % Want to get the name of the features we are working with
    length_of_file_name = length(WorkingfileName);
    length_file_name_without_extention = length_of_file_name - 4;
    ChosenMatrix = WorkingfileName(1:length_file_name_without_extention);
    ChosenFeatures = ChosenMatrix;
    
    toWorkWith = sprintf('features/%s',WorkingfileName);
    
    % load the features to work with
    load(toWorkWith)
    
    BInY = BinarizeMyClassLabels(InY);
    
    % Start by removing outliers
    [InX,BInY,NumberRemoved] = RemoveOutliers(InX,BInY);

    % Balance The classes
    
    [InX,BInY] = EvenMyBinaryClasses(InX,BInY);
    
    % Normalize columns to have mean 0, std 1
    
    InX = zscore(InX);
    
    [NumberOfInstances,NumberOfFeatures] = size(InX);
    
    % Binary-Class
    [CFS_B,cfs_bin_columns,FCBF_B,fcbf_bin_columns,...
    Fisher_B,fisher_bin_columns] = FSMyMatrix(InX,BInY);

    InitialFile_Bin_FileName = sprintf('%s_Binary_Initial',ChosenMatrix);
    Write_Binary_Initial = fopen(InitialFile_Bin_FileName,'w');
 
    fprintf(Write_Binary_Initial, 'Original Number of features: %d \n',NumberOfFeatures);
    fprintf(Write_Binary_Initial, 'Number of outliers removed: %d \n',NumberRemoved);
    fprintf(Write_Binary_Initial, '\n');
    fprintf(Write_Binary_Initial,'%d Columns Chosen by CFS : \n',length(cfs_bin_columns)); 
    fprintf(Write_Binary_Initial,' %d ',cfs_bin_columns);
    fprintf(Write_Binary_Initial,'\n');

    fprintf(Write_Binary_Initial,'%d Columns Chosen by FCBF : \n',length(fcbf_bin_columns)); 
    fprintf(Write_Binary_Initial,' %d ',fcbf_bin_columns);
    fprintf(Write_Binary_Initial,'\n');

    fprintf(Write_Binary_Initial,'%d Columns Chosen by Fisher : \n',length(fisher_bin_columns)); 
    fprintf(Write_Binary_Initial,' %d ',fisher_bin_columns);
    fprintf(Write_Binary_Initial,'\n');

    fclose('all');
    
  
% Knn Binary

% Binary


%My Original Matrix `BiSVM_Multi_Months
nay Class
[Orig_B_KNN_Precision_micro,...
Orig_B_KNN_Precision_Macro,...
Orig_B_KNN_Recall_micro,...
Orig_B_KNN_Recall_Macro,...
Orig_B_KNN_Fscore_Macro,...
Orig_B_KNN_Fscore_micro,...
Orig_B_KNN_Acc,...
Orig_B_KNN_NumNeigh,...
Orig_B_KNN_Confusion]...
= RunMyKnn(InX,BInY);

WriteMyKNNFile(ChosenFeatures,...
'Original_Matrix',...
'Binary',...
Orig_B_KNN_Precision_micro,...
Orig_B_KNN_Precision_Macro,...
Orig_B_KNN_Recall_micro,...
Orig_B_KNN_Recall_Macro,...
Orig_B_KNN_Fscore_Macro,...
Orig_B_KNN_Fscore_micro,...
Orig_B_KNN_Acc,...
Orig_B_KNN_NumNeigh,...
Orig_B_KNN_Confusion);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%CFS Bin Class
[CFS_B_KNN_Precision_micro,...
CFS_B_KNN_Precision_Macro,...
CFS_B_KNN_Recall_micro,...
CFS_B_KNN_Recall_Macro,...
CFS_B_KNN_Fscore_Macro,...
CFS_B_KNN_Fscore_micro,...
CFS_B_KNN_Acc,...
CFS_B_KNN_NumNeigh,...
CFS_B_KNN_Confusion]...
= RunMyKnn(CFS_B,BInY);

WriteMyKNNFile(ChosenFeatures,...
'CFS_Matrix',...
'Binary',...
CFS_B_KNN_Precision_micro,...
CFS_B_KNN_Precision_Macro,...
CFS_B_KNN_Recall_micro,...
CFS_B_KNN_Recall_Macro,...
CFS_B_KNN_Fscore_Macro,...
CFS_B_KNN_Fscore_micro,...
CFS_B_KNN_Acc,...
CFS_B_KNN_NumNeigh,...
CFS_B_KNN_Confusion);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FCBF Binary Class
[FCBF_B_KNN_Precision_micro,...
FCBF_B_KNN_Precision_Macro,...
FCBF_B_KNN_Recall_micro,...
FCBF_B_KNN_Recall_Macro,...
FCBF_B_KNN_Fscore_Macro,...
FCBF_B_KNN_Fscore_micro,...
FCBF_B_KNN_Acc,...
FCBF_B_KNN_NumNeigh,...
FCBF_B_KNN_Confusion]...
= RunMyKnn(FCBF_B,BInY);

WriteMyKNNFile(ChosenFeatures,...
'FCBF_Matrix',...
'Binary',...
FCBF_B_KNN_Precision_micro,...
FCBF_B_KNN_Precision_Macro,...
FCBF_B_KNN_Recall_micro,...
FCBF_B_KNN_Recall_Macro,...
FCBF_B_KNN_Fscore_Macro,...
FCBF_B_KNN_Fscore_micro,...
FCBF_B_KNN_Acc,...
FCBF_B_KNN_NumNeigh,...
FCBF_B_KNN_Confusion);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Fisher Binary Class
[Fisher_B_KNN_Precision_micro,...
Fisher_B_KNN_Precision_Macro,...
Fisher_B_KNN_Recall_micro,...
Fisher_B_KNN_Recall_Macro,...
Fisher_B_KNN_Fscore_Macro,...
Fisher_B_KNN_Fscore_micro,...
Fisher_B_KNN_Acc,...
Fisher_B_KNN_NumNeigh,...
Fisher_B_KNN_Confusion]...
= RunMyKnn(Fisher_B,BInY);

WriteMyKNNFile(ChosenFeatures,...
'Fisher_Matrix',...
'Binary',...
Fisher_B_KNN_Precision_micro,...
Fisher_B_KNN_Precision_Macro,...
Fisher_B_KNN_Recall_micro,...
Fisher_B_KNN_Recall_Macro,...
Fisher_B_KNN_Fscore_Macro,...
Fisher_B_KNN_Fscore_micro,...
Fisher_B_KNN_Acc,...
Fisher_B_KNN_NumNeigh,...
Fisher_B_KNN_Confusion);
end

%}

% Third Run: Binary SVM
%{
for file_index = 3:length(List_files_in_Months)
    
    
    WorkingfileName = List_files_in_Months(file_index).name;
    
    
    % Want to get the name of the features we are working with
    length_of_file_name = length(WorkingfileName);
    length_file_name_without_extention = length_of_file_name - 4;
    ChosenMatrix = WorkingfileName(1:length_file_name_without_extention);
    ChosenFeatures = ChosenMatrix;
    
    toWorkWith = sprintf('Months/%s',WorkingfileName);
    
    % load the features to work with
    load(toWorkWith)
    
    % Turn Labels into binary class labels

    BInY = BinarizeMyClassLabels(InY);
    
    % Start by removing outliers
    [InX,BInY,NumberRemoved] = RemoveOutliers(InX,BInY);

    % Balance The classes
    [InX,BInY] = EvenMyBinaryClasses(InX,BInY);
    
    % Normalize columns to have mean 0, std 1
    InX = zscore(InX);
    
    [NumberOfInstances,NumberOfFeatures] = size(InX);
    
    %Methods
    % CFS
    % FCBF
    % Fisher

    InBinY = BInY;
    % Binary-Class
[CFS_B,cfs_bin_columns,FCBF_B,fcbf_bin_columns,...
Fisher_B,fisher_bin_columns] = FSMyMatrix(InX,InBinY);

    
%Original Matrix binary Class
[Orig_B_SVM_Precision_Macro,...
 Orig_B_SVM_Precision_micro,...
 Orig_B_SVM_Recall_Macro,...
 Orig_B_SVM_Recall_micro,...
 Orig_B_SVM_F1Score_Macro,...
 Orig_B_SVM_F1Score_micro, ...
 Orig_B_SVM_Final__Accuracy,...
 Orig_B_SVM_Best_Cost,...
 Orig_B_SVM_Best_Gamma,...
 Orig_B_SVM_Final_ConfMatrix,...
 Orig_B_SVM_Final_Inconclusive] ...
    = RunMySVM(InX,BInY);

WriteMySVMFile(ChosenFeatures,...
'Original_Matrix',...
'Binary',...
Orig_B_SVM_Precision_Macro,...
 Orig_B_SVM_Precision_micro,...
 Orig_B_SVM_Recall_Macro,...
 Orig_B_SVM_Recall_micro,...
 Orig_B_SVM_F1Score_Macro,...
 Orig_B_SVM_F1Score_micro, ...
 Orig_B_SVM_Final__Accuracy,...
 Orig_B_SVM_Best_Cost,...
 Orig_B_SVM_Best_Gamma,...
 Orig_B_SVM_Final_ConfMatrix,...
 Orig_B_SVM_Final_Inconclusive);

%CFS Binary Class
[CFS_B_SVM_Precision_Macro,...
 CFS_B_SVM_Precision_micro,...
 CFS_B_SVM_Recall_Macro,...
 CFS_B_SVM_Recall_micro,...
 CFS_B_SVM_F1Score_Macro,...
 CFS_B_SVM_F1Score_micro, ...
 CFS_B_SVM_Final__Accuracy,...
 CFS_B_SVM_Best_Cost,...
 CFS_B_SVM_Best_Gamma,...
 CFS_B_SVM_Final_ConfMatrix,...
 CFS_B_SVM_Final_Inconclusive] ...
    = RunMySVM(CFS_B,BInY);

WriteMySVMFile(ChosenFeatures,...
'CFS_Matrix',...
'Binary',...
CFS_B_SVM_Precision_Macro,...
 CFS_B_SVM_Precision_micro,...
 CFS_B_SVM_Recall_Macro,...
 CFS_B_SVM_Recall_micro,...
 CFS_B_SVM_F1Score_Macro,...
 CFS_B_SVM_F1Score_micro, ...
 CFS_B_SVM_Final__Accuracy,...
 CFS_B_SVM_Best_Cost,...
 CFS_B_SVM_Best_Gamma,...
 CFS_B_SVM_Final_ConfMatrix,...
 CFS_B_SVM_Final_Inconclusive);

%FCBF Binary Class
[FCBF_B_SVM_Precision_Macro,...
 FCBF_B_SVM_Precision_micro,...
 FCBF_B_SVM_Recall_Macro,...
 FCBF_B_SVM_Recall_micro,...
 FCBF_B_SVM_F1Score_Macro,...
 FCBF_B_SVM_F1Score_micro, ...
 FCBF_B_SVM_Final__Accuracy,...
 FCBF_B_SVM_Best_Cost,...
 FCBF_B_SVM_Best_Gamma,...
 FCBF_B_SVM_Final_ConfMatrix,...
 FCBF_B_SVM_Final_Inconclusive]...
    = RunMySVM(FCBF_B,BInY);

WriteMySVMFile(ChosenFeatures,...
'FCBF_Matrix',...
'Binary',...
FCBF_B_SVM_Precision_Macro,...
 FCBF_B_SVM_Precision_micro,...
 FCBF_B_SVM_Recall_Macro,...
 FCBF_B_SVM_Recall_micro,...
 FCBF_B_SVM_F1Score_Macro,...
 FCBF_B_SVM_F1Score_micro, ...
 FCBF_B_SVM_Final__Accuracy,...
 FCBF_B_SVM_Best_Cost,...
 FCBF_B_SVM_Best_Gamma,...
 FCBF_B_SVM_Final_ConfMatrix,...
 FCBF_B_SVM_Final_Inconclusive);

%Fisher Binary Class
[Fisher_B_SVM_Precision_Macro,...
 Fisher_B_SVM_Precision_micro,...
 Fisher_B_SVM_Recall_Macro,...
 Fisher_B_SVM_Recall_micro,...
 Fisher_B_SVM_F1Score_Macro,...
 Fisher_B_SVM_F1Score_micro, ...
 Fisher_B_SVM_Final__Accuracy,...
 Fisher_B_SVM_Best_Cost,...
 Fisher_B_SVM_Best_Gamma,...
 Fisher_B_SVM_Final_ConfMatrix,...
 Fisher_B_SVM_Final_Inconclusive] ...
    = RunMySVM(Fisher_B,BInY);

WriteMySVMFile(ChosenFeatures,...
'Fisher_Matrix',...
'Binary',...
Fisher_B_SVM_Precision_Macro,...
 Fisher_B_SVM_Precision_micro,...
 Fisher_B_SVM_Recall_Macro,...
 Fisher_B_SVM_Recall_micro,...
 Fisher_B_SVM_F1Score_Macro,...
 Fisher_B_SVM_F1Score_micro, ...
 Fisher_B_SVM_Final__Accuracy,...
 Fisher_B_SVM_Best_Cost,...
 Fisher_B_SVM_Best_Gamma,...
 Fisher_B_SVM_Final_ConfMatrix,...
Fisher_B_SVM_Final_Inconclusive);
end

%}

% Fourth Run : MultiClass SVM

for file_index = 3:length(List_files_in_Months)
    
    
    WorkingfileName = List_files_in_Months(file_index).name;
    
    
    % Want to get the name of the features we are working with
    length_of_file_name = length(WorkingfileName);
    length_file_name_without_extention = length_of_file_name - 4;
    ChosenMatrix = WorkingfileName(1:length_file_name_without_extention);
    ChosenFeatures = ChosenMatrix;
    
    toWorkWith = sprintf('Months/%s',WorkingfileName);
    
    % load the features to work with
    load(toWorkWith)
    
    % Start by removing outliers
    [InX,InY,NumberRemoved] = RemoveOutliers(InX,InY);
    
    % Normalize columns to have mean 0, std 1
    
    InX = zscore(InX);
    
    [NumberOfInstances,NumberOfFeatures] = size(InX);
    
    %Methods
    % CFS
    % FCBF
    % Fisher

    % Multi-Class
    [CFS_M,cfs_columns,...
    FCBF_M,fcbf_columns,Fisher_M,...
    fisher_columns] = FSMyMatrix(InX,InY);

    % Original Matrix Multi Class
[Orig_SVM_Precision_Macro,...
 Orig_SVM_Precision_micro,...
 Orig_SVM_Recall_Macro,...
 Orig_SVM_Recall_micro,...
 Orig_SVM_F1Score_Macro,...
 Orig_SVM_F1Score_micro, ...
 Orig_SVM_Final__Accuracy,...
 Orig_SVM_Best_Cost,...
 Orig_SVM_Best_Gamma,...
 Orig_SVM_Final_ConfMatrix,...
 Orig_SVM_Final_Inconclusive] ...
    = RunMySVM(InX,InY);

WriteMySVMFile(ChosenFeatures,...
'Original_Matrix',...
'MultiClass',...
Orig_SVM_Precision_Macro,...
 Orig_SVM_Precision_micro,...
 Orig_SVM_Recall_Macro,...
 Orig_SVM_Recall_micro,...
 Orig_SVM_F1Score_Macro,...
 Orig_SVM_F1Score_micro, ...
 Orig_SVM_Final__Accuracy,...
 Orig_SVM_Best_Cost,...
 Orig_SVM_Best_Gamma,...
 Orig_SVM_Final_ConfMatrix,...
 Orig_SVM_Final_Inconclusive);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%CFS Multi Class
[CFS_SVM_Precision_Macro,...
 CFS_SVM_Precision_micro,...
 CFS_SVM_Recall_Macro,...
 CFS_SVM_Recall_micro,...
 CFS_SVM_F1Score_Macro,...
 CFS_SVM_F1Score_micro, ...
 CFS_SVM_Final__Accuracy,...
 CFS_SVM_Best_Cost,...
 CFS_SVM_Best_Gamma,...
 CFS_SVM_Final_ConfMatrix,...
 CFS_SVM_Final_Inconclusive] ...
    = RunMySVM(CFS_M,InY);

WriteMySVMFile(ChosenFeatures,...
'CFS_Matrix',...
'MultiClass',...
CFS_SVM_Precision_Macro,...
 CFS_SVM_Precision_micro,...
 CFS_SVM_Recall_Macro,...
 CFS_SVM_Recall_micro,...
 CFS_SVM_F1Score_Macro,...
 CFS_SVM_F1Score_micro, ...
 CFS_SVM_Final__Accuracy,...
 CFS_SVM_Best_Cost,...
 CFS_SVM_Best_Gamma,...
 CFS_SVM_Final_ConfMatrix,...
 CFS_SVM_Final_Inconclusive);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%FCBF Multi Class
[FCBF_SVM_Precision_Macro,...
 FCBF_SVM_Precision_micro,...
 FCBF_SVM_Recall_Macro,...
 FCBF_SVM_Recall_micro,...
 FCBF_SVM_F1Score_Macro,...
 FCBF_SVM_F1Score_micro, ...
 FCBF_SVM_Final__Accuracy,...
 FCBF_SVM_Best_Cost,...
 FCBF_SVM_Best_Gamma,...
 FCBF_SVM_Final_ConfMatrix,...
 FCBF_SVM_Final_Inconclusive] ...
    = RunMySVM(FCBF_M,InY);

WriteMySVMFile(ChosenFeatures,...
'FCBF_Matrix',...
'MultiClass',...
FCBF_SVM_Precision_Macro,...
 FCBF_SVM_Precision_micro,...
 FCBF_SVM_Recall_Macro,...
 FCBF_SVM_Recall_micro,...
 FCBF_SVM_F1Score_Macro,...
 FCBF_SVM_F1Score_micro, ...
 FCBF_SVM_Final__Accuracy,...
 FCBF_SVM_Best_Cost,...
 FCBF_SVM_Best_Gamma,...
 FCBF_SVM_Final_ConfMatrix,...
 FCBF_SVM_Final_Inconclusive);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Fisher Multi Class
[Fisher_SVM_Precision_Macro,...
 Fisher_SVM_Precision_micro,...
 Fisher_SVM_Recall_Macro,...
 Fisher_SVM_Recall_micro,...
 Fisher_SVM_F1Score_Macro,...
 Fisher_SVM_F1Score_micro, ...
 Fisher_SVM_Final__Accuracy,...
 Fisher_SVM_Best_Cost,...
 Fisher_SVM_Best_Gamma,...
 Fisher_SVM_Final_ConfMatrix,...
 Fisher_SVM_Final_Inconclusive] ...
    = RunMySVM(Fisher_M,InY);

WriteMySVMFile(ChosenFeatures,...
'Fisher_Matrix',...
'MultiClass',...
Fisher_SVM_Precision_Macro,...
 Fisher_SVM_Precision_micro,...
 Fisher_SVM_Recall_Macro,...
 Fisher_SVM_Recall_micro,...
 Fisher_SVM_F1Score_Macro,...
 Fisher_SVM_F1Score_micro, ...
 Fisher_SVM_Final__Accuracy,...
 Fisher_SVM_Best_Cost,...
 Fisher_SVM_Best_Gamma,...
 Fisher_SVM_Final_ConfMatrix,...
 Fisher_SVM_Final_Inconclusive);

end


























































%Remove outliers
%(say remove rows where in one row
%there are two column values which are 3 Stds from the mean

% [X_Matrix,Y_Matrix,NumberRemoved] = RemoveOutliers(InputMatrix)

%Normalaize
% Each column to have mean 0 and unit variance

% USE zscore: zscore changes it so that each column has mean 0 and std 1.
% Matrix = zscore(InputMatrix)

%Feature Selection
% Run 3 feasture selection methods and return 3 matrics
% remember the features chosen

%load_featureselection

%Methods
% CFS
% FCBF
% Fisher

% Multi-Class
%[CFS_M,cfs_columns,FCBF_M,fcbf_columns,Fisher_M,fisher_columns] = FSMyMatrix(InX,InY);

%{
 InitialFile_FileName = sprintf('%s_Multi_Initial',ChosenMatrix);
 Write_Multi_Initial = fopen(InitialFile_FileName,'w');
 

fprintf(Write_Multi_Initial, 'Number of outliers removed:
 %d',NumberRemoved);
 fprintf(Write_Multi_Initial,'Columns Chosen by CFS:'); 
 fprintf(Write_Multi_Initial,' %d ',cfs_columns);
 fprintf(Write_Multi_Initial,'\n');

fprintf(Write_Multi_Initial,'Columns Chosen by FCBF:'); 
 fprintf(Write_Multi_Initial,' %d ',cfs_columns);
 fprintf(Write_Multi_Initial,'\n');


fprintf(Write_Multi_Initial,'Columns Chosen by Fisher:'); 
 fprintf(Write_Multi_Initial,' %d ',fisher_columns);
 fprintf(Write_Multi_Initial,'\n');

fclose(InitialFile_FileName);

%}

% Binary-Class
%[CFS_B,cfs_bin_columns,FCBF_B,fcbf_bin_columns,...
%Fisher_B,fisher_bin_columns] = FSMyMatrix(InX,InBinY);

%{
 InitialFile_Bin_FileName = sprintf('%s_Binary_Initial',ChosenMatrix);
 Write_Binary_Initial = fopen(InitialFile_Bin_FileName,'w');
 

fprintf(Write_Binary_Initial, 'Number of outliers removed:
 %d',NumberRemoved);
 fprintf(Write_Binary_Initial,'Columns Chosen by CFS:'); 
 fprintf(Write_Binary_Initial,' %d ',cfs_columns);
 fprintf(Write_Binary_Initial,'\n');

fprintf(Write_Binary_Initial,'Columns Chosen by FCBF:'); 
 fprintf(Write_Binary_Initial,' %d ',cfs_columns);
 fprintf(Write_Binary_Initial,'\n');

fprintf(Write_Binary_Initial,'Columns Chosen by FCBF:'); 
 fprintf(Write_Binary_Initial,' %d ',fcbf_columns);
 fprintf(Write_Binary_Initial,'\n');

fprintf(Write_Binary_Initial,'Columns Chosen by Fisher:'); 
 fprintf(Write_Binary_Initial,' %d ',fisher_columns);
 fprintf(Write_Binary_Initial,'\n');

fclose(InitialFile_Bin_FileName);

%}


%Model
% K-NN
% Run cross-fold K-NN on each of the N+1 matrices
% Return the best K, evaluation measures for each matrix,
% Best K is a results of the best evaluation measures

% Knn Multi Class
%{ 

%%%%%% Multi Class %%%%%%

%{
%My Original Matrix Multi Class
[Orig_KNN_Precision_micro,...
Orig_KNN_Precision_Macro,...
Orig_KNN_Recall_micro,...
Orig_KNN_Recall_Macro,...
Orig_KNN_Fscore_Macro,...
Orig_KNN_Fscore_micro,...
Orig_KNN_Acc,...
Orig_KNN_NumNeigh,...
Orig_KNN_Confusion]...
= RunMyKnn(Inx,InY);


WriteMyKNNFile(ChosenFeatures,...
'Original_Matrix',...
'MultiClass',...
Orig_KNN_Precision_micro,...
Orig_KNN_Precision_Macro,...
Orig_KNN_Recall_micro,...
Orig_KNN_Recall_Macro,...
Orig_KNN_Fscore_Macro,...
Orig_KNN_Fscore_micro,...
Orig_KNN_Acc,...
Orig_KNN_NumNeigh,...
Orig_KNN_Confusion);


%}
%{
%CFS Multi Class
[CFS_KNN_Precision_micro,...
CFS_KNN_Precision_Macro,...
CFS_KNN_Recall_micro,...
CFS_KNN_Recall_Macro,...
CFS_KNN_Fscore_Macro,...
CFS_KNN_Fscore_micro,...
CFS_KNN_Acc,...
CFS_KNN_NumNeigh,...
CFS_KNN_Confusion]...
= RunMyKnn(CFS_M,InY);

WriteMyKNNFile(ChosenFeatures,...
'CFS_Matrix',...
'MultiClass',...
CFS_KNN_Precision_micro,...
CFS_KNN_Precision_Macro,...
CFS_KNN_Recall_micro,...
CFS_KNN_Recall_Macro,...
CFS_KNN_Fscore_Macro,...
CFS_KNN_Fscore_micro,...
CFS_KNN_Acc,...
CFS_KNN_NumNeigh,...
CFS_KNN_Confusion);

%}

%{
% FCBF Multi Class
[FCBF_KNN_Precision_micro,...
FCBF_KNN_Precision_Macro,...
FCBF_KNN_Recall_micro,...
FCBF_KNN_Recall_Macro,...
FCBF_KNN_Fscore_Macro,...
FCBF_KNN_Fscore_micro,...
FCBF_KNN_Acc,...
FCBF_KNN_NumNeigh,...
FCBF_KNN_Confusion]...
= RunMyKnn(FCBF_M,InY);

WriteMyKNNFile(ChosenFeatures,...
'FCBF_Matrix',...
'MultiClass',...
FCBF_KNN_Precision_micro,...
FCBF_KNN_Precision_Macro,...
FCBF_KNN_Recall_micro,...
FCBF_KNN_Recall_Macro,...
FCBF_KNN_Fscore_Macro,...
FCBF_KNN_Fscore_micro,...
FCBF_KNN_Acc,...
FCBF_KNN_NumNeigh,...
FCBF_KNN_Confusion);
%}

%{

%Fisher Multi Class
[Fisher_KNN_Precision_micro,...
Fisher_KNN_Precision_Macro,...
Fisher_KNN_Recall_micro,...
Fisher_KNN_Recall_Macro,...
Fisher_KNN_Fscore_Macro,...
Fisher_KNN_Fscore_micro,...
Fisher_KNN_Acc,...
Fisher_KNN_NumNeigh,...
Fisher_KNN_Confusion]...
= RunMyKnn(Fisher_M,InY);

WriteMyKNNFile(ChosenFeatures,...
'Fisher_Matrix',...
'MultiClass',...
Fisher_KNN_Precision_micro,...
Fisher_KNN_Precision_Macro,...
Fisher_KNN_Recall_micro,...
Fisher_KNN_Recall_Macro,...
Fisher_KNN_Fscore_Macro,...
Fisher_KNN_Fscore_micro,...
Fisher_KNN_Acc,...
Fisher_KNN_NumNeigh,...
Fisher_KNN_Confusion);
%}


% Knn Binary

% Binary


My Original Matrix `Binay Class
[Orig_B_KNN_Precision_micro,...
Orig_B_KNN_Precision_Macro,...
Orig_B_KNN_Recall_micro,...
Orig_B_KNN_Recall_Macro,...
Orig_B_KNN_Fscore_Macro,...
Orig_B_KNN_Fscore_micro,...
Orig_B_KNN_Acc,...
Orig_B_KNN_NumNeigh,...
Orig_B_KNN_Confusion]...
= RunMyKnn(Inx,BinY);

WriteMyKNNFile(ChosenFeatures,...
'Original_Matrix',...
'Binary',...
Orig_B_KNN_Precision_micro,...
Orig_B_KNN_Precision_Macro,...
Orig_B_KNN_Recall_micro,...
Orig_B_KNN_Recall_Macro,...
Orig_B_KNN_Fscore_Macro,...
Orig_B_KNN_Fscore_micro,...
Orig_B_KNN_Acc,...
Orig_B_KNN_NumNeigh,...
Orig_B_KNN_Confusion);
%}

%{
%CFS Bin Class
[CFS_B_KNN_Precision_micro,...
CFS_B_KNN_Precision_Macro,...
CFS_B_KNN_Recall_micro,...
CFS_B_KNN_Recall_Macro,...
CFS_B_KNN_Fscore_Macro,...
CFS_B_KNN_Fscore_micro,...
CFS_B_KNN_Acc,...
CFS_B_KNN_NumNeigh,...
CFS_B_KNN_Confusion]...
= RunMyKnn(CFS_B,BinY);

WriteMyKNNFile(ChosenFeatures,...
'CFS_Matrix',...
'Binary',...
CFS_B_KNN_Precision_micro,...
CFS_B_KNN_Precision_Macro,...
CFS_B_KNN_Recall_micro,...
CFS_B_KNN_Recall_Macro,...
CFS_B_KNN_Fscore_Macro,...
CFS_B_KNN_Fscore_micro,...
CFS_B_KNN_Acc,...
CFS_B_KNN_NumNeigh,...
CFS_B_KNN_Confusion);

%}

%{
% FCBF Binary Class
[FCBF_B_KNN_Precision_micro,...
FCBF_B_KNN_Precision_Macro,...
FCBF_B_KNN_Recall_micro,...
FCBF_B_KNN_Recall_Macro,...
FCBF_B_KNN_Fscore_Macro,...
FCBF_B_KNN_Fscore_micro,...
FCBF_B_KNN_Acc,...
FCBF_B_KNN_NumNeigh,...
FCBF_B_KNN_Confusion]...
= RunMyKnn(FCBF_B,BinY);

WriteMyKNNFile(ChosenFeatures,...
'FCBF_Matrix',...
'Binary',...
FCBF_B_KNN_Precision_micro,...
FCBF_B_KNN_Precision_Macro,...
FCBF_B_KNN_Recall_micro,...
FCBF_B_KNN_Recall_Macro,...
FCBF_B_KNN_Fscore_Macro,...
FCBF_B_KNN_Fscore_micro,...
FCBF_B_KNN_Acc,...
FCBF_B_KNN_NumNeigh,...
FCBF_B_KNN_Confusion);

%}

%{

%Fisher Binary Class
[Fisher_B_KNN_Precision_micro,...
Fisher_B_KNN_Precision_Macro,...
Fisher_B_KNN_Recall_micro,...
Fisher_B_KNN_Recall_Macro,...
Fisher_B_KNN_Fscore_Macro,...
Fisher_B_KNN_Fscore_micro,...
Fisher_B_KNN_Acc,...
Fisher_B_KNN_NumNeigh,...
Fisher_B_KNN_Confusion]...
= RunMyKnn(Fisher_B,BinY);

WriteMyKNNFile(ChosenFeatures,...
'Fisher_Matrix',...
'Binary',...
Fisher_B_KNN_Precision_micro,...
Fisher_B_KNN_Precision_Macro,...
Fisher_B_KNN_Recall_micro,...
Fisher_B_KNN_Recall_Macro,...
Fisher_B_KNN_Fscore_Macro,...
Fisher_B_KNN_Fscore_micro,...
Fisher_B_KNN_Acc,...
Fisher_B_KNN_NumNeigh,...
Fisher_B_KNN_Confusion);

%}

%}



% SVM
% Depends on binary or multiclass labels which SVM is run.
% If binary run SVMclass10fold
%
%{
%{
% Original Matrix binary Class
[Orig_B_SVM_Precision_Macro,...
 Orig_B_SVM_Precision_micro,...
 Orig_B_SVM_Recall_Macro,...
 Orig_B_SVM_Recall_micro,...
 Orig_B_SVM_F1Score_Macro,...
 Orig_B_SVM_F1Score_micro, ...
 Orig_B_SVM_Final__Accuracy,...
 Orig_B_SVM_Best_Cost,...
 Orig_B_SVM_Best_Gamma,...
 Orig_B_SVM_Final_ConfMatrix] ...
    = RunMySVM(InX,BInY);

WriteMySVMFile(ChosenFeatures,...
'Original_Matrix',...
'Binary',...
Orig_B_SVM_Precision_Macro,...
 Orig_B_SVM_Precision_micro,...
 Orig_B_SVM_Recall_Macro,...
 Orig_B_SVM_Recall_micro,...
 Orig_B_SVM_F1Score_Macro,...
 Orig_B_SVM_F1Score_micro, ...
 Orig_B_SVM_Final__Accuracy,...
 Orig_B_SVM_Best_Cost,...
 Orig_B_SVM_Best_Gamma,...
 Orig_B_SVM_Final_ConfMatrix);

%}

%{
%CFS Binary Class
[CFS_B_SVM_Precision_Macro,...
 CFS_B_SVM_Precision_micro,...
 CFS_B_SVM_Recall_Macro,...
 CFS_B_SVM_Recall_micro,...
 CFS_B_SVM_F1Score_Macro,...
 CFS_B_SVM_F1Score_micro, ...
 CFS_B_SVM_Final__Accuracy,...
 CFS_B_SVM_Best_Cost,...
 CFS_B_SVM_Best_Gamma,...
 CFS_B_SVM_Final_ConfMatrix] ...
    = RunMySVM(CFS_B,BInY);

WriteMySVMFile(ChosenFeatures,...
'CFS_Matrix',...
'Binary',...
CFS_B_SVM_Precision_Macro,...
 CFS_B_SVM_Precision_micro,...
 CFS_B_SVM_Recall_Macro,...
 CFS_B_SVM_Recall_micro,...
 CFS_B_SVM_F1Score_Macro,...
 CFS_B_SVM_F1Score_micro, ...
 CFS_B_SVM_Final__Accuracy,...
 CFS_B_SVM_Best_Cost,...
 CFS_B_SVM_Best_Gamma,...
 CFS_B_SVM_Final_ConfMatrix);

%}
%{
%FCBF Binary Class
[FCBF_B_SVM_Precision_Macro,...
 FCBF_B_SVM_Precision_micro,...
 FCBF_B_SVM_Recall_Macro,...
 FCBF_B_SVM_Recall_micro,...
 FCBF_B_SVM_F1Score_Macro,...
 FCBF_B_SVM_F1Score_micro, ...
 FCBF_B_SVM_Final__Accuracy,...
 FCBF_B_SVM_Best_Cost,...
 FCBF_B_SVM_Best_Gamma,...
 FCBF_B_SVM_Final_ConfMatrix] ...
    = RunMySVM(FCBF_B,BinY);

WriteMySVMFile(ChosenFeatures,...
'FCBF_Matrix',...
'Binary',...
FCBF_B_SVM_Precision_Macro,...
 FCBF_B_SVM_Precision_micro,...
 FCBF_B_SVM_Recall_Macro,...
 FCBF_B_SVM_Recall_micro,...
 FCBF_B_SVM_F1Score_Macro,...
 FCBF_B_SVM_F1Score_micro, ...
 FCBF_B_SVM_Final__Accuracy,...
 FCBF_B_SVM_Best_Cost,...
 FCBF_B_SVM_Best_Gamma,...
 FCBF_B_SVM_Final_ConfMatrix);

%}

%{
%Fisher Binary Class
[Fisher_B_SVM_Precision_Macro,...
 Fisher_B_SVM_Precision_micro,...
 Fisher_B_SVM_Recall_Macro,...
 Fisher_B_SVM_Recall_micro,...
 Fisher_B_SVM_F1Score_Macro,...
 Fisher_B_SVM_F1Score_micro, ...
 Fisher_B_SVM_Final__Accuracy,...
 Fisher_B_SVM_Best_Cost,...
 Fisher_B_SVM_Best_Gamma,...
 Fisher_B_SVM_Final_ConfMatrix] ...
    = RunMySVM(Fisher_B,BinY);

WriteMySVMFile(ChosenFeatures,...
'FCBF_Matrix',...
'Binary',...
Fisher_B_SVM_Precision_Macro,...
 Fisher_B_SVM_Precision_micro,...
 Fisher_B_SVM_Recall_Macro,...
 Fisher_B_SVM_Recall_micro,...
 Fisher_B_SVM_F1Score_Macro,...
 Fisher_B_SVM_F1Score_micro, ...
 Fisher_B_SVM_Final__Accuracy,...
 Fisher_B_SVM_Best_Cost,...
 Fisher_B_SVM_Best_Gamma,...
 Fisher_B_SVM_Final_ConfMatrix);
%}
%}

% If multiclass run SVM1v1
% Run with parameters found to be best
% Return the best evaluation measures for each model

%{
%{
% Original Matrix Multi Class
[Orig_SVM_Precision_Macro,...
 Orig_SVM_Precision_micro,...
 Orig_SVM_Recall_Macro,...
 Orig_SVM_Recall_micro,...
 Orig_SVM_F1Score_Macro,...
 Orig_SVM_F1Score_micro, ...
 Orig_SVM_Final__Accuracy,...
 Orig_SVM_Best_Cost,...
 Orig_SVM_Best_Gamma,...
 Orig_SVM_Final_ConfMatrix] ...
    = RunMySVM(InX,InY);

WriteMySVMFile(ChosenFeatures,...
'Original_Matrix',...
'MultiClass',...
Orig_SVM_Precision_Macro,...
 Orig_SVM_Precision_micro,...
 Orig_SVM_Recall_Macro,...
 Orig_SVM_Recall_micro,...
 Orig_SVM_F1Score_Macro,...
 Orig_SVM_F1Score_micro, ...
 Orig_SVM_Final__Accuracy,...
 Orig_SVM_Best_Cost,...
 Orig_SVM_Best_Gamma,...
 Orig_SVM_Final_ConfMatrix);

%}

%{
%CFS Multi Class
[CFS_SVM_Precision_Macro,...
 CFS_SVM_Precision_micro,...
 CFS_SVM_Recall_Macro,...
 CFS_SVM_Recall_micro,...
 CFS_SVM_F1Score_Macro,...
 CFS_SVM_F1Score_micro, ...
 CFS_SVM_Final__Accuracy,...
 CFS_SVM_Best_Cost,...
 CFS_SVM_Best_Gamma,...
 CFS_SVM_Final_ConfMatrix] ...
    = RunMySVM(CFS_M,InY);

WriteMySVMFile(ChosenFeatures,...
'CFS_Matrix',...
'MultiClass',...
CFS_SVM_Precision_Macro,...
 CFS_SVM_Precision_micro,...
 CFS_SVM_Recall_Macro,...
 CFS_SVM_Recall_micro,...
 CFS_SVM_F1Score_Macro,...
 CFS_SVM_F1Score_micro, ...
 CFS_SVM_Final__Accuracy,...
 CFS_SVM_Best_Cost,...
 CFS_SVM_Best_Gamma,...
 CFS_SVM_Final_ConfMatrix);

%}

%{
%FCBF Multi Class
[FCBF_SVM_Precision_Macro,...
 FCBF_SVM_Precision_micro,...
 FCBF_SVM_Recall_Macro,...
 FCBF_SVM_Recall_micro,...
 FCBF_SVM_F1Score_Macro,...
 FCBF_SVM_F1Score_micro, ...
 FCBF_SVM_Final__Accuracy,...
 FCBF_SVM_Best_Cost,...
 FCBF_SVM_Best_Gamma,...
 FCBF_SVM_Final_ConfMatrix] ...
    = RunMySVM(FCBF_M,InY);

WriteMySVMFile(ChosenFeatures,...
'FCBF_Matrix',...
'MultiClass',...
FCBF_SVM_Precision_Macro,...
 FCBF_SVM_Precision_micro,...
 FCBF_SVM_Recall_Macro,...
 FCBF_SVM_Recall_micro,...
 FCBF_SVM_F1Score_Macro,...
 FCBF_SVM_F1Score_micro, ...
 FCBF_SVM_Final__Accuracy,...
 FCBF_SVM_Best_Cost,...
 FCBF_SVM_Best_Gamma,...
 FCBF_SVM_Final_ConfMatrix);
%}

%{
%Fisher Multi Class
[Fisher_SVM_Precision_Macro,...
 Fisher_SVM_Precision_micro,...
 Fisher_SVM_Recall_Macro,...
 Fisher_SVM_Recall_micro,...
 Fisher_SVM_F1Score_Macro,...
 Fisher_SVM_F1Score_micro, ...
 Fisher_SVM_Final__Accuracy,...
 Fisher_SVM_Best_Cost,...
 Fisher_SVM_Best_Gamma,...
 Fisher_SVM_Final_ConfMatrix] ...
    = RunMySVM(Fisher_M,InY);

WriteMySVMFile(ChosenFeatures,...
'Fisher_Matrix',...
'MultiClass',...
Fisher_SVM_Precision_Macro,...
 Fisher_SVM_Precision_micro,...
 Fisher_SVM_Recall_Macro,...
 Fisher_SVM_Recall_micro,...
 Fisher_SVM_F1Score_Macro,...
 Fisher_SVM_F1Score_micro, ...
 Fisher_SVM_Final__Accuracy,...
 Fisher_SVM_Best_Cost,...
 Fisher_SVM_Best_Gamma,...
 Fisher_SVM_Final_ConfMatrix);
%}
%}